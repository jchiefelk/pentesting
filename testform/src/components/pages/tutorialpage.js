import React, { Component } from 'react';
import Style from '../../style/style'
var Actions = require('../../actions/actions');
var PublishingStore = require('../../stores/publishingstore');
var Tutorial = require('../components/tutorial');

class TutorialPage extends Component {
	constructor(){
		super();
		this.state ={
			firstname: 'First Name',
			lastname: 'Last Name',
			abstract: 'Abstract',
			article: '',
			subjects: 'Subjects',
			article_store_data: PublishingStore.getArticleData(),
			saved: false,
			image_url: null,
			httpstatus: null,
			message: null,
			tutorial: Tutorial.renderSQLInjectionTutorial()
		};
	}
	componentWillUnmount(){		
		PublishingStore.removeChangeListener(this._onChange.bind(this));
	}
	componentDidMount(){
		PublishingStore.addChangeListener(this._onChange.bind(this));
	}
	saveData(){
		Actions.SaveClick();
		this.setState({saved: true});
	}
	editFirstName(e){
		this.setState({
			firstname: e.target.value
		});
		Actions.setFirstName(this.state.firstname);
	}
	editLastName(e){
		this.setState({
			lastname: e.target.value
		});
		Actions.setLastName(this.state.lastname);
	}
	editSubject(e){
		this.setState({subjects: e.target.value});
		Actions.setSubjects(this.state.subjects)
	}

	_onChange(){
		this.setState({
			httpstatus: PublishingStore.getStatus(),
			article_store_data: PublishingStore.getArticleData(),
			// message: PublishingStore.getArticleData().status
		});
	
		if(this.state.httpstatus==500){
			alert('Internal Server Error 500: Improper Format in One of Responses');
		}	
	
		if(this.state.httpstatus==200) {
			this.setState({
				message: "Submitted!",
				firstname: 'First Name',
				lastname: 'Last Name'
			});
		}
	}

	_onClick(){

		if(this.state.message!=null){
			this.setState({message: null});
			Actions.clearMessage();
		}
	}

	componentDidUpdate(){


		if(this.state.saved==true && this.state.message!=null){
			this.setState({saved: false});
		}
		if(this.state.saved==true && this.state.message==null){
			this.setState({saved: false});
			Actions.postToPending(this.state.article_store_data);
		}
	
	}

    render() {
    	this.form = (
           		<div style={{display: 'flex',justifyContent: 'center', flexDirection: 'column'}}>
           			<p style={{fontSize: 24, marginTop: 10, color: 'red'}}>{this.state.message}</p>
           			<input style={Style.firstname} value={this.state.firstname} onChange={(e)=> this.editFirstName(e)}  onBlur={(e)=> this.editFirstName(e)} onClick={()=> this._onClick() }/>
	            	<input style={Style.lastname} value={this.state.lastname} onChange={(e)=> this.editLastName(e)} onBlur={(e)=> this.editLastName(e)} onClick={()=> this._onClick() } />
           		    <div style={Style.article_save} onClick={()=> this.saveData()}>
                		<h1 style={Style.save_text}>Save</h1>
                	</div>
           		</div>
        );

        return (
           	<div> 
           		{this.state.tutorial}
           		{this.form}
            </div>
        );
    }
}
export default TutorialPage;
