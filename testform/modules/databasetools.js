const express = require('express');
const router = express.Router();
var Client = require('mariasql'); 
var config = require('./config');
var Promise = require( 'bluebird' );
var cors = require( "cors" );
var date = new Date();
//
// Connecting to local databse instance
//

let _store;
var connect = new Client({
  host: config.development.database.host,
  user: config.development.database.user,
  password: config.development.database.password,
  db: config.development.database.database
});

var getPendingArticles = function(){
  return new Promise(function(resolve,reject){
            var sql = 'select * from Pending';
            connect.query(sql, function(err,rows){
            //	console.log(rows);
                  if (err) {
                      reject(err);
                  } else {
                      resolve(rows);
                  }
            });
  });
};


var with_prepared_statement_postToPending = function(){
  return new Promise(function(resolve,reject){
      var Insert = [_store.firstname, _store.lastname];
      var sql = 'insert into Pending set First_Name=?, Last_Name=?';
      connect.query(sql,Insert,function(err, rows) {
      
          if (err) {
            reject(err);
          }  else {
            resolve(rows.info.insertId);
          }
      });
	});
};


var without_prepared_statements_postToPending = function(){

    let firstname = ' " '+_store.firstname+ ' " ';
    let lastname = '"'+_store.lastname + '"';
    
    let sql =  'insert into Pending set First_Name='+ firstname + ',Last_Name='+lastname;

    return new Promise(function(resolve,reject){
        connect.query(sql,function(err, rows) {
            if (err) {
              reject(err);
            }  else {
              resolve(rows.info.insertId);
            }
        });

    });

};




class DatabaseTools {

	getPendingArticleData() {
          return new Promise(function(resolve,reject){
                    var sql = 'select * from Pending';
                    connect.query(sql, function(err,rows){
                    //  console.log(rows);
                          if (err) {
                              reject(err);
                          } else {
                              resolve(rows);
                          }
                    });
          });
	}

	postPendingArticle(item){
    _store = item;
	  return without_prepared_statements_postToPending();
	 // return with_prepared_statement_postToPending();

  }

}
module.exports = new DatabaseTools